---
title: "Tech Leaderisms."
kind: article
created_at: 2008-06-10 19:13:00 UTC
author: Steven Deobald
layout: post
---
Are you a developer? Yes? Then I'm sorry to tell you, friend: There is a Tech Lead in you. Rather, someone will try to make you a Tech Lead one day. For your future Tech Lead self, I recommend reading the corresponding articles, <a href="http://www.magpiebrain.com/blog/2006/09/12/a-tech-lead-manifesto/">A Tech Lead Manifesto</a> and <a href="http://www.thekua.com/atwork/2008/05/10/behaviours-of-a-tech-lead/">Behaviours of a Tech Lead</a> (written by colleagues Sam Newman and Pat Kua, respectively).<br /><br />To those insights, I add these recommendations:<br /><br /><span style="font-size:130%;">Know Your Teammates</span><br /><br />Before you start, talk to everyone. Understand each developer's goals and fears with respect to your upcoming project. Know the strengths and weaknesses of everyone on your team, and formulate a plan for dealing with both. Sketch out your team roster and ensure that the experience and skill level is balanced.<br /><br /><br /><span style="font-size:130%;">Use Two-Pizza Teams</span><br /><br />I'm not sure who first coined this, but I love the idea. I also like the idea of trying it out in reality: Have an in-office team dinner. Order two pizzas. Were you left hungry? Your team is too large. Or you have one gluttonous developer. But probably your team is too large.<br /><br />Given an oversized team by this yardstick, work with all stakeholders involved to divide up the project. You may even find additional value in simplifications required to divide up your previously bloated project.<br /><br /><br /><span style="font-size:130%;">Develop Horizontally Until Release 1</span><br /><br />It may seem obvious, but I'm still surprised how often this rule is ignored. If you haven't deployed into a production environment yet, build out -- not down. Complex business rules will materialize in every story. They always do. Create new stories from these rules and put them on the shelf until they are truly more important than the next functional story coming down the pipe.<br /><br />As a Tech Lead, you share this responsibility with your stakeholders. At the end of the day, they will decide what is most important. However, the unseen complexity of a business is visible to you because it materializes as code; share this with everyone.<br /><br /><br /><span style="font-size:130%;">Build It Yourself </span><span style="font-size:130%;">First</span><br /><br />All too often slogans such as "You Aren't Gonna Need It" are thrown around the the software community until they're almost law. Lately, I find the most troubling to be "Not Invented Here Syndrome"; more often than not, I find the opposite Syndrome afflicting developers: "There's a Framework For That! Syndrome"<br /><br />Sure there is. Build it yourself anyway.<br /><br />The majority of frameworks are simply implementations of patterns. Whether as ubiquitous as Dependency Injection, or as domain-specific as a shopping cart, try implementing the pattern yourself before reaching for the nearest third-party library. You very well might throw it away, but often you'll end up with an implementation which is significantly lighter and easier to test.<br /><br /><br /><span style="font-size:130%;">Keep Metrics and Ratchet Your Build</span><br /><br /><a href="http://skizz.biz">Chris</a> wrote about "<a href="http://skizz.biz/blog/2008/03/11/fixing-broken-windows-with-ratcheting/">ratcheting</a>" recently. Go read it! The flip side of ratcheting is, of course, preventative medicine. Why wait until you have 60 TODOs before breaking the build? Place as many reasonable limits on yourself as you can, early on. In the thick of the project your motivation to do so might be overruled by the desire to Just Write Code. Tools such as <a href="http://www.panopticode.org/">Panopticode</a>, <a href="http://metric-fu.rubyforge.org/">metric_fu</a>, <a href="http://pmd.sourceforge.net/">PMD</a>, and <a href="http://www.mono-project.com/Gendarme">Gendarme</a> will help you a great deal, but they're just the tip of the iceberg. Be creative not only in the tools you choose, but the rules you write and the metrics you extract.<div class="author">
  <img src="http://nilenso.com/people/steven-200.png" style="width: 96px; height: 96;">
  <span style="position: absolute; padding: 32px 15px;">
    <i>Original post by <a href="http://twitter.com/deobald">Steven Deobald</a> - check out <a href="http://blog.deobald.ca/">Hungry, horny, sleepy, curious.</a></i>
  </span>
</div>
